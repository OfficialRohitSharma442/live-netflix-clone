{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargerow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","palyerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12c9c9d5.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"./axios\";\r\n/* import requests from \"./requests\"; */\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\nfunction Row({ title, fetchUrl, isLargerow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const[trailerUrl, setTrailerUrl] =useState(\"\");\r\n  // a snippet of code which runs besed on specific condition\r\n  useEffect(() => {\r\n    // run one when the row loads ,and dont run again\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n  const opts = {\r\n    height:\"390\",\r\n    width:\"100%\",\r\n    palyerVars:{\r\n      autoplay:1,\r\n    },\r\n  };\r\n    const handleClick = (movie)=> {\r\n    if (trailerUrl){\r\n      setTrailerUrl(\"\");\r\n    }else{\r\n      movieTrailer(movie?.name || \" \")\r\n      .then((url)=>{\r\n       /*  https://www.youtube.com/watch?v=2lfETGiIDf8 */\r\n       const urlParams = new URLSearchParams(new URL(url).search);\r\n       setTrailerUrl(urlParams.get(\"v\"));\r\n\r\n      }).catch((error)=>console.log(error));\r\n    }\r\n\r\n  };\r\n//   console.log(movies);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row_posters\">\r\n        {/* row___Posters */}\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row_poster ${isLargerow && \"row__posterLarge\"}`}\r\n            src={`${base_url}${\r\n                isLargerow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n     {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\nexport default Row;\r\n","const API_KEY =\"ad1ee45485f575a60c48b4693fee9bbc\";\r\n const requests ={\r\nfetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\nfetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\nfetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\nfetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\nfetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\nfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\nfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\nfetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n\r\n}\r\nexport default requests;","import React, { useEffect, useState } from 'react';\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport './Banner.css';\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\nfunction Banner(){\r\nconst [movie,setMovie] = useState([]);\r\nuseEffect(()=>{\r\n    async function fetchData(){\r\n       const request = await axios.get(requests.fetchNetflixOriginals);\r\n       setMovie(\r\n        request.data.results[ Math.floor(Math.random() * request.data.results.length - 1)]\r\n       );\r\n       console.log(request.data.results[ Math.floor(Math.random() * request.data.results.length - 1)]);\r\n    }\r\n    fetchData();\r\n},[]);\r\nfunction truncate(str , n){\r\n    return str?.length > n ? str.substr(0, n - 1) +\"...\" : str ;\r\n}\r\n\r\n\r\n    return (\r\n           <header className=\"Banner\" \r\n           style={{\r\n               backgroundSize:'cover',\r\n               backgroundImage:`url(${base_url}${movie?.backdrop_path})`,\r\n               backgroundPosition:\"center top\"\r\n           }}\r\n           >\r\n               <div className=\"Banner__contents\">\r\n                <h1 className=\"Banner__title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n            \r\n               <div className=\"bannner__Buttons\">\r\n                 <button className=\"bannner__Button\">Play</button>                 \r\n                 <button className=\"bannner__Button\">My List</button> \r\n               </div>\r\n               <h1 className=\"banner__description\">{truncate(movie?.overview, 150)}</h1> \r\n               </div>   \r\n            \r\n           </header>\r\n        )\r\n}\r\n\r\n\r\n\r\nexport default Banner;","import React, { useEffect, useState } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n \r\n    const [show, handleShow] = useState(false);\r\n    useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n      /* return handleShow; */\r\n/*       console.log(handleShow); */\r\n    });\r\n     return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  },[]);\r\n\r\n  return (\r\n    <div className={ `nav ${show && \"nav__black\"}`}>\r\n      <img\r\n        className=\"nav_logo\"\r\n        src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\r\n        alt=\"Netflix logo\"\r\n      />\r\n      <img\r\n        className=\"nav_avatar\"\r\n        src=\"https://pbs.twimg.com/media/DlKNEufWsAAgr2E.jpg\"\r\n        alt=\"Netflix logo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default Nav;\r\n","import React from 'react';\nimport Row from './Row';\nimport requests from './requests'; \nimport './App.css';\nimport Banner from './Banner';\nimport Nav from './Nav';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n    <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargerow />\n    <Row title=\"Trending Now\"  fetchUrl={requests.fetchTrending} />\n    <Row title=\"Top Rated\"  fetchUrl={requests.fetchTopRated} />\n    <Row title=\"Action Movies\"  fetchUrl={requests.fetchActionMovies} />\n    <Row title=\"Comedy Movies\"  fetchUrl={requests.fetchComedyMovies} />\n    <Row title=\"Horror Movies\"  fetchUrl={requests.fetchHorrorMovies} />\n    <Row title=\"Romance Movies\"  fetchUrl={requests.fetchRomanceMovies} />\n    <Row title=\"Documentaries\"  fetchUrl={requests.fetchDocumentaries} />\n  \n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}